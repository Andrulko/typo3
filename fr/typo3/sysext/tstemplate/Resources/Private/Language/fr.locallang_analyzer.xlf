<?xml version="1.0" encoding="UTF-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" datatype="plaintext" original="EXT:tstemplate/Resources/Private/Language/locallang_analyzer.xlf" date="2011-10-17T20:22:37Z" product-name="tstemplate" target-language="fr">
    <header/>
    <body>
      <trans-unit id="submodule.title" resname="submodule.title">
        <source>Included TypoScript</source>
        <target state="needs-translation">Included TypoScript</target>
      </trans-unit>
      <trans-unit id="submodule.titleWithRecord" resname="submodule.titleWithRecord">
        <source>Included TypoScript for record "%s"</source>
        <target state="needs-translation">Included TypoScript for record "%s"</target>
      </trans-unit>
      <trans-unit id="submodule.description" resname="submodule.description">
        <source>Overview of the included TypoScript and include order for the current page.</source>
        <target state="needs-translation">Overview of the included TypoScript and include order for the current page.</target>
      </trans-unit>
      <trans-unit id="infobox.message.noTypoScriptFound" resname="infobox.message.noTypoScriptFound">
        <source>No TypoScript found.</source>
        <target state="needs-translation">No TypoScript found.</target>
      </trans-unit>
      <trans-unit id="options.selectedRecord" resname="options.selectedRecord">
        <source>Selected record</source>
        <target state="needs-translation">Selected record</target>
      </trans-unit>
      <trans-unit id="sectionHeadline.constants" resname="sectionHeadline.constants">
        <source>Constants</source>
        <target state="needs-translation">Constants</target>
      </trans-unit>
      <trans-unit id="sectionHeadline.setup" resname="sectionHeadline.setup">
        <source>Setup</source>
        <target state="needs-translation">Setup</target>
      </trans-unit>
      <trans-unit id="panel.header.syntaxErrors" resname="panel.header.syntaxErrors">
        <source>Syntax scanner warnings</source>
        <target state="needs-translation">Syntax scanner warnings</target>
      </trans-unit>
      <trans-unit id="panel.header.conditions" resname="panel.header.conditions">
        <source>Conditions</source>
        <target state="needs-translation">Conditions</target>
      </trans-unit>
      <trans-unit id="panel.header.configuration" resname="panel.header.configuration">
        <source>Configuration</source>
        <target state="needs-translation">Configuration</target>
      </trans-unit>
      <trans-unit id="panel.info.syntaxErrorCount.single" resname="panel.info.syntaxErrorCount.single">
        <source>%s syntax warning</source>
        <target state="needs-translation">%s syntax warning</target>
      </trans-unit>
      <trans-unit id="panel.info.syntaxErrorCount.multiple" resname="panel.info.syntaxErrorCount.multiple">
        <source>%s syntax warnings</source>
        <target state="needs-translation">%s syntax warnings</target>
      </trans-unit>
      <trans-unit id="panel.info.conditionActiveCount.multiple" resname="panel.info.conditionActiveCount.multiple">
        <source>%s active conditions</source>
        <target state="needs-translation">%s active conditions</target>
      </trans-unit>
      <trans-unit id="panel.info.conditionActiveCount.single" resname="panel.info.conditionActiveCount.single">
        <source>%s active condition</source>
        <target state="needs-translation">%s active condition</target>
      </trans-unit>
      <trans-unit id="panel.info.conditionWithConstant" resname="panel.info.conditionWithConstant">
        <source>Constant usage: [%s]</source>
        <target state="needs-translation">Constant usage: [%s]</target>
      </trans-unit>
      <trans-unit id="syntaxError.sourceCode" resname="syntaxError.sourceCode">
        <source>Show affected code snippet</source>
        <target state="needs-translation">Show affected code snippet</target>
      </trans-unit>
      <trans-unit id="syntaxError.type.line.invalid" resname="syntaxError.type.line.invalid">
        <source>Invalid line in "%1$s", line number "%2$s"</source>
        <target state="needs-translation">Invalid line in "%1$s", line number "%2$s"</target>
      </trans-unit>
      <trans-unit id="syntaxError.type.brace.excess" resname="syntaxError.type.brace.excess">
        <source>Brace in excess in "%1$s", line number "%2$s"</source>
        <target state="needs-translation">Brace in excess in "%1$s", line number "%2$s"</target>
      </trans-unit>
      <trans-unit id="syntaxError.type.brace.missing" resname="syntaxError.type.brace.missing">
        <source>Brace missing in "%1$s", line number "%2$s"</source>
        <target state="needs-translation">Brace missing in "%1$s", line number "%2$s"</target>
      </trans-unit>
      <trans-unit id="syntaxError.type.import.empty" resname="syntaxError.type.import.empty">
        <source>Import does not find a file in "%1$s", line number "%2$s"</source>
        <target state="needs-translation">Import does not find a file in "%1$s", line number "%2$s"</target>
      </trans-unit>
      <trans-unit id="tree.child.btn.sourceCode" resname="tree.child.btn.sourceCode">
        <source>Show code</source>
        <target state="needs-translation">Show code</target>
      </trans-unit>
      <trans-unit id="tree.child.btn.sourceCodeWithResolvedIncludes" resname="tree.child.btn.sourceCodeWithResolvedIncludes">
        <source>Show code including possible includes/imports</source>
        <target state="needs-translation">Show code including possible includes/imports</target>
      </trans-unit>
      <trans-unit id="tree.child.conditionVerdict.matched" resname="tree.child.conditionVerdict.matched">
        <source>Matched</source>
        <target state="needs-translation">Matched</target>
      </trans-unit>
      <trans-unit id="tree.child.conditionVerdict.notMatched" resname="tree.child.conditionVerdict.notMatched">
        <source>Not matched</source>
        <target state="needs-translation">Not matched</target>
      </trans-unit>
      <trans-unit id="tree.child.setting.clear" resname="tree.child.setting.clear">
        <source>Clear</source>
        <target state="needs-translation">Clear</target>
      </trans-unit>
      <trans-unit id="tree.child.setting.root" resname="tree.child.setting.root">
        <source>Root</source>
        <target state="needs-translation">Root</target>
      </trans-unit>
      <trans-unit id="tree.child.sysTemplateRecord" resname="tree.child.sysTemplateRecord">
        <source>TypoScript record (page UID %s)</source>
        <target state="needs-translation">TypoScript record (page UID %s)</target>
      </trans-unit>
      <trans-unit id="tree.child.type.AtImport" resname="tree.child.type.AtImport">
        <source>Included via "@import"</source>
        <target state="needs-translation">Included via "@import"</target>
      </trans-unit>
      <trans-unit id="tree.child.type.Condition" resname="tree.child.type.Condition">
        <source>Condition (then)</source>
        <target state="needs-translation">Condition (then)</target>
      </trans-unit>
      <trans-unit id="tree.child.type.ConditionElse" resname="tree.child.type.ConditionElse">
        <source>Condition (else)</source>
        <target state="needs-translation">Condition (else)</target>
      </trans-unit>
      <trans-unit id="tree.child.type.ConditionIncludeTyposcript" resname="tree.child.type.ConditionIncludeTyposcript">
        <source>Included via "INCLUDE_TYPOSCRIPT" (with condition)</source>
        <target state="needs-translation">Included via "INCLUDE_TYPOSCRIPT" (with condition)</target>
      </trans-unit>
      <trans-unit id="tree.child.type.ConditionStop" resname="tree.child.type.ConditionStop">
        <source>Condition (end)</source>
        <target state="needs-translation">Condition (end)</target>
      </trans-unit>
      <trans-unit id="tree.child.type.DefaultTypoScript" resname="tree.child.type.DefaultTypoScript">
        <source>Included via "$GLOBALS"</source>
        <target state="needs-translation">Included via "$GLOBALS"</target>
      </trans-unit>
      <trans-unit id="tree.child.type.DefaultTypoScriptMagicKey" resname="tree.child.type.DefaultTypoScriptMagicKey">
        <source>Included via "$GLOBALS"</source>
        <target state="needs-translation">Included via "$GLOBALS"</target>
      </trans-unit>
      <trans-unit id="tree.child.type.DefaultTypoScriptMagicKey_formlabel" resname="tree.child.type.DefaultTypoScriptMagicKey_formlabel">
        <source>Default content rendering</source>
        <target state="needs-translation">Default content rendering</target>
      </trans-unit>
      <trans-unit id="tree.child.type.ExtensionStatic" resname="tree.child.type.ExtensionStatic">
        <source>TypoScript set (loaded automatically)</source>
        <target state="needs-translation">TypoScript set (loaded automatically)</target>
      </trans-unit>
      <trans-unit id="tree.child.type.File" resname="tree.child.type.File">
        <source>Part of a TypoScript set</source>
        <target state="needs-translation">Part of a TypoScript set</target>
      </trans-unit>
      <trans-unit id="tree.child.type.IncludeStaticFileDatabase" resname="tree.child.type.IncludeStaticFileDatabase">
        <source>TypoScript set</source>
        <target state="needs-translation">TypoScript set</target>
      </trans-unit>
      <trans-unit id="tree.child.type.IncludeStaticFileFile" resname="tree.child.type.IncludeStaticFileFile">
        <source>TypoScript set (included via file)</source>
        <target state="needs-translation">TypoScript set (included via file)</target>
      </trans-unit>
      <trans-unit id="tree.child.type.IncludeTyposcript" resname="tree.child.type.IncludeTyposcript">
        <source>Included via "INCLUDE_TYPOSCRIPT"</source>
        <target state="needs-translation">Included via "INCLUDE_TYPOSCRIPT"</target>
      </trans-unit>
      <trans-unit id="tree.child.type.Root" resname="tree.child.type.Root">
        <source>Root</source>
        <target state="needs-translation">Root</target>
      </trans-unit>
      <trans-unit id="tree.child.type.Segment" resname="tree.child.type.Segment">
        <source>Code segment</source>
        <target state="needs-translation">Code segment</target>
      </trans-unit>
      <trans-unit id="tree.child.type.Site" resname="tree.child.type.Site">
        <source>Site</source>
        <target state="needs-translation">Site</target>
      </trans-unit>
      <trans-unit id="tree.child.type.SiteTemplate" resname="tree.child.type.SiteTemplate">
        <source>Site configuration</source>
        <target state="needs-translation">Site configuration</target>
      </trans-unit>
      <trans-unit id="tree.child.type.SysTemplate" resname="tree.child.type.SysTemplate">
        <source>TypoScript record</source>
        <target state="needs-translation">TypoScript record</target>
      </trans-unit>
    </body>
  </file>
</xliff>
